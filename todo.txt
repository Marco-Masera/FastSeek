

Generic indexer:

    <bin> index <filename> <--column N> <--separator string> <--hashmap-size size>
        --column REQUIRED  (shortcut: -cN, for example -c0 for first column)
            >Indexed from 0, tell that to the user
        --separator <default: \t>
        --hasmap_size <default: num lines of original file>  (shortcut: -h1000)
            >(Structure is kept in-memory)
            >If user knows number of lines, better to provide them by hand - will make process faster

    <bin> search <filename> <KEYWORDS>  <--column N> <--separator string>  --print-duplicates
        KEYWORDS: string or sequence of strings to search
        --column REQUIRED  (shortcut: -cN, for example -c0 for first column)
                >Indexed from 0, tell that to the user
        --separator <default: \t>
        --print-duplicates: this flag prints all lines with the keyword, if more than one exist

    TODO:
    -Hashmap >> RAM 
        >Decision if to iterate multiple times on original file or move cursor on output file
    -Multithreading 
    Nuovo flag - allow duplicates:
        -In caso duplicati, stampali tutti
        -Conviene di default attivare contiguous blocks
    Nuovo flag - compress hashmap
        -Flag compressed hashmap: deve prima caricarla interamente in memoria, ma index + piccolo 
        -Se false (default): 2 file, hashmap in chiaro, blocchi compressi 
    Nuovo flag - contiguous block 
        -Invece di blocchi come linked list, blocchi contigui.
        -Accesso + veloce, dimezzi spazio perché non serve puntatore a next 
        -Usa primo bit x distinguere se è il primo elemento di un blocco o una continuazione
        -Indexing è significativamente più lento.
    Quando lanci index:
        -Stampa opzioni e raccomandazioni (es using linked-list blocks, not good for datasets with many duplicates)



Banchmarking:
    >50M records:
        TIME: (RELEASE mode (optimizations ON)) vs 16 seconds of zcat > ..
            -6 seconds with no hashmap-size
            -4 seconds??? - hashmap_size as num_lines
            -4 seconds  - hasmap_size as 2*num_lines
            -5 seconds in RELEASE mode + hashmap_size specified as 4*num_lines
                
            -Search - instant
        SPACE:
            -216M index 
                vs 2.8G uncompressed original data

    ==> Conflicts: C 4.597.713 slC: 1.294.257

    ==> With new optimization, smaller hashamp is not a problem anymore
        -Good, no need to waste space with larger hashmaps

Banchmarking:
    >500M records:
        TIME: (RELEASE mode (optimizations ON)) vs 11s x of cat | wc -l
            -1m5s with no --hashmap 
            -45s  with --hashmap = num_lines
        SPACE:
            -1.7G index vs 28G data
    
    >Full file, compressed:
        -zcat | wc -l : 15m 34s  => Very close to csv_indexer
        -Index - no --hashmap: 18m 4s
        -Index, hashmap: 9m26.410s
        -SAMTOOLS: next
